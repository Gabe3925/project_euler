# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

# fibonacci_sequence = [1, 2]
# while fibonacci_sequence.length < 100
#   next_number = (fibonacci_sequence.at(fibonacci_sequence.length-1) + fibonacci_sequence.at(fibonacci_sequence.length-2))
#    while next_number <= 4000000
#     fibonacci_sequence.push(next_number)
#    end
# end

# print fibonacci_sequence

fibonacci_sequence = [1, 1, 2]
while fibonacci_sequence.last < 4000000
  next_number = (fibonacci_sequence.at(fibonacci_sequence.length-1) + fibonacci_sequence.at(fibonacci_sequence.length-2))
  fibonacci_sequence.push(next_number)
end
print fibonacci_sequence

even_fibs = []
fibonacci_sequence.each {|number| if number.even? then even_fibs.push(number)end}
print even_fibs

sum_of_even_fibs = 0
even_fibs.each {|n| sum_of_even_fibs+=n }

puts "The sum of even fibs with values less than 4-million is: " + sum_of_even_fibs.to_s

